diff --git a/node_modules/@libp2p/interop/src/dht/peer-routing.ts b/node_modules/@libp2p/interop/src/dht/peer-routing.ts
index 796697d..72240bd 100644
--- a/node_modules/@libp2p/interop/src/dht/peer-routing.ts
+++ b/node_modules/@libp2p/interop/src/dht/peer-routing.ts
@@ -56,8 +56,26 @@ function runPeerRoutingTests (factory: DaemonFactory, optionsA: SpawnOptions, op
 
       // peer 1 find peer 2, retry up to 10 times to allow the routing table to refresh
       const peerData: PeerInfo = await pRetry(async () => daemonB.client.dht.findPeer(identify2.peerId), { retries: 10 })
-
-      expect(identify2.addrs.map(ma => ma.toString())).to.include.deep.members(peerData.multiaddrs.map(ma => ma.toString()))
+      /**
+       * js-libp2p returns peerData including peerId in multiaddrs, go-libp2p does not
+       * This means we should assert that the smaller substring matches
+       */
+      identify2.addrs.forEach(ma => {
+        peerData.multiaddrs.forEach(ma2 => {
+          if (ma.getPeerId() != null && ma2.getPeerId() != null) {
+            // if both contain peerId, they should be equal
+            expect(ma2.toString()).to.equal(ma.toString())
+          } else if (ma.getPeerId() != null) {
+            // if only one contains peerId, the other should be a substring
+            expect(ma.toString()).to.include(ma2.toString())
+          } else if (ma2.getPeerId() != null) {
+            expect(ma2.toString()).to.include(ma.toString())
+          } else {
+            // neither contain peerId, they should be equal
+            expect(ma2.toString()).to.equal(ma.toString())
+          }
+        })
+      })
     })
   })
 }
